--- a/net/minecraft/fluid/FlowableFluid.java
+++ b/net/minecraft/fluid/FlowableFluid.java
@@ -264,17 +264,17 @@
          if (direction2 != direction) {
             BlockPos blockPos3 = blockPos.offset(direction2);
             short s = method_15747(blockPos2, blockPos3);
-            Pair<BlockState, FluidState> pair = (Pair)short2ObjectMap.computeIfAbsent(s, (ix) -> {
-               BlockState blockState = world.getBlockState(blockPos3);
-               return Pair.of(blockState, blockState.getFluidState());
+            Pair<BlockState, FluidState> pair = short2ObjectMap.computeIfAbsent(s, (ix) -> {
+               BlockState blockState2 = world.getBlockState(blockPos3);
+               return Pair.of(blockState2, blockState2.getFluidState());
             });
             BlockState blockState2 = (BlockState)pair.getFirst();
             FluidState fluidState = (FluidState)pair.getSecond();
             if (this.canFlowThrough(world, this.getFlowing(), blockPos, blockState, direction2, blockPos3, blockState2, fluidState)) {
                boolean bl = short2BooleanMap.computeIfAbsent(s, (ix) -> {
-                  BlockPos blockPos2 = blockPos3.down();
-                  BlockState blockState2 = world.getBlockState(blockPos2);
-                  return this.method_15736(world, this.getFlowing(), blockPos3, blockState2, blockPos2, blockState2);
+                  BlockPos blockPos22 = blockPos3.down();
+                  BlockState blockState22 = world.getBlockState(blockPos22);
+                  return this.method_15736(world, this.getFlowing(), blockPos3, blockState2, blockPos22, blockState22);
                });
                if (bl) {
                   return i;
@@ -433,3 +433,5 @@
       return state.getLevel() == 9 && isFluidAboveEqual(state, world, pos) ? VoxelShapes.fullCube() : (VoxelShape)this.shapeCache.computeIfAbsent(state, (fluidState) -> VoxelShapes.cuboid(0.0D, 0.0D, 0.0D, 1.0D, (double)fluidState.getHeight(world, pos), 1.0D));
    }
 }
+
+// Fukkit Marker
