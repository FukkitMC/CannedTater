--- a/net/minecraft/server/world/ChunkHolder.java
+++ b/net/minecraft/server/world/ChunkHolder.java
@@ -45,7 +45,7 @@
    private volatile CompletableFuture<Either<WorldChunk, ChunkHolder.Unloaded>> accessibleFuture = UNLOADED_WORLD_CHUNK_FUTURE;
    private volatile CompletableFuture<Either<WorldChunk, ChunkHolder.Unloaded>> tickingFuture = UNLOADED_WORLD_CHUNK_FUTURE;
    private volatile CompletableFuture<Either<WorldChunk, ChunkHolder.Unloaded>> entityTickingFuture = UNLOADED_WORLD_CHUNK_FUTURE;
-   private CompletableFuture<Chunk> savingFuture = CompletableFuture.completedFuture((Object)null);
+   private CompletableFuture<Chunk> savingFuture = CompletableFuture.completedFuture(null);
    private int lastTickLevel;
    private int level;
    private int completedLevel;
@@ -104,8 +104,8 @@
    @Nullable
    public WorldChunk getWorldChunk() {
       CompletableFuture<Either<WorldChunk, ChunkHolder.Unloaded>> completableFuture = this.getTickingFuture();
-      Either<WorldChunk, ChunkHolder.Unloaded> either = (Either)completableFuture.getNow((Object)null);
-      return either == null ? null : (WorldChunk)either.left().orElse((Object)null);
+      Either<WorldChunk, ChunkHolder.Unloaded> either = (Either)completableFuture.getNow(null);
+      return either == null ? null : (WorldChunk)either.left().orElse(null);
    }
 
    @Nullable
@@ -223,7 +223,7 @@
       int i = targetStatus.getIndex();
       CompletableFuture<Either<Chunk, ChunkHolder.Unloaded>> completableFuture = (CompletableFuture)this.futuresByStatus.get(i);
       if (completableFuture != null) {
-         Either<Chunk, ChunkHolder.Unloaded> either = (Either)completableFuture.getNow((Object)null);
+         Either<Chunk, ChunkHolder.Unloaded> either = (Either)completableFuture.getNow(null);
          if (either == null || either.left().isPresent()) {
             return completableFuture;
          }
@@ -393,3 +393,5 @@
       };
    }
 }
+
+// Fukkit Marker
