--- a/net/minecraft/server/world/ServerWorld.java
+++ b/net/minecraft/server/world/ServerWorld.java
@@ -172,14 +172,14 @@
 
    public ServerWorld(MinecraftServer server, Executor workerExecutor, LevelStorage.Session session, ServerWorldProperties properties, RegistryKey<World> registryKey, DimensionType dimensionType, WorldGenerationProgressListener worldGenerationProgressListener, ChunkGenerator chunkGenerator, boolean debugWorld, long l, List<Spawner> list, boolean bl) {
       super(properties, registryKey, dimensionType, server::getProfiler, false, debugWorld, l);
-      this.blockTickScheduler = new ServerTickScheduler(this, (block) -> {
+      this.blockTickScheduler = new ServerTickScheduler<>(this, (block) -> {
          return block == null || block.getDefaultState().isAir();
       }, Registry.BLOCK::getId, this::tickBlock);
-      this.fluidTickScheduler = new ServerTickScheduler(this, (fluid) -> {
+      this.fluidTickScheduler = new ServerTickScheduler<>(this, (fluid) -> {
          return fluid == null || fluid == Fluids.EMPTY;
       }, Registry.FLUID::getId, this::tickFluid);
       this.entityNavigations = Sets.newHashSet();
-      this.syncedBlockEventQueue = new ObjectLinkedOpenHashSet();
+      this.syncedBlockEventQueue = new ObjectLinkedOpenHashSet<>();
       this.shouldTickTime = bl;
       this.server = server;
       this.spawners = list;
@@ -445,7 +445,7 @@
    }
 
    private void wakeSleepingPlayers() {
-      ((List)this.players.stream().filter(LivingEntity::isSleeping).collect(Collectors.toList())).forEach((player) -> {
+      (this.players.stream().filter(LivingEntity::isSleeping).collect(Collectors.toList())).forEach((player) -> {
          player.wakeUp(false, false);
       });
    }
@@ -1552,7 +1552,7 @@
    private static <T> String method_31270(Collection<T> collection, Function<T, Identifier> function) {
       try {
          Object2IntOpenHashMap<Identifier> object2IntOpenHashMap = new Object2IntOpenHashMap();
-         Iterator var3 = collection.iterator();
+         Iterator<T> var3 = collection.iterator();
 
          while(var3.hasNext()) {
             T object = var3.next();
@@ -1581,3 +1581,5 @@
       });
    }
 }
+
+// Fukkit Marker
