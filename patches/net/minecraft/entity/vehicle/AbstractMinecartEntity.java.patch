--- a/net/minecraft/entity/vehicle/AbstractMinecartEntity.java
+++ b/net/minecraft/entity/vehicle/AbstractMinecartEntity.java
@@ -164,16 +164,13 @@
             EntityPose entityPose = (EntityPose)e.next();
             EntityDimensions entityDimensions = passenger.getDimensions(entityPose);
             float f = Math.min(entityDimensions.width, 1.0F) / 2.0F;
-            UnmodifiableIterator g = ((ImmutableList)DISMOUNT_FREE_Y_SPACES_NEEDED.get(entityPose)).iterator();
 
-            while(g.hasNext()) {
-               int i = g.next();
-
-               for(int[] js : is) {
+            for (int i : DISMOUNT_FREE_Y_SPACES_NEEDED.get(entityPose)) {
+               for (int[] js : is) {
                   mutable.set(blockPos.getX() + js[0], blockPos.getY() + i, blockPos.getZ() + js[1]);
                   double d = this.world.getDismountHeight(Dismounting.getCollisionShape(this.world, mutable), () -> Dismounting.getCollisionShape(this.world, mutable.down()));
                   if (Dismounting.canDismountInBlock(d)) {
-                     Box box = new Box((double)(-f), 0.0D, (double)(-f), (double)f, (double)entityDimensions.height, (double)f);
+                     Box box = new Box((double) (-f), 0.0D, (double) (-f), (double) f, (double) entityDimensions.height, (double) f);
                      Vec3d vec3d = Vec3d.ofCenter(mutable, d);
                      if (Dismounting.canPlaceEntityAt(this.world, passenger, box.offset(vec3d))) {
                         passenger.setPose(entityPose);
@@ -184,16 +181,16 @@
             }
          }
 
-         double e = this.getBoundingBox().maxY;
-         mutable.set((double)blockPos.getX(), e, (double)blockPos.getZ());
+         double ex = this.getBoundingBox().maxY;
+         mutable.set((double)blockPos.getX(), ex, (double)blockPos.getZ());
          UnmodifiableIterator var22 = immutableList.iterator();
 
          while(var22.hasNext()) {
             EntityPose entityPose2 = (EntityPose)var22.next();
             double g = (double)passenger.getDimensions(entityPose2).height;
-            int j = MathHelper.ceil(e - (double)mutable.getY() + g);
+            int j = MathHelper.ceil(ex - (double)mutable.getY() + g);
             double h = Dismounting.getCeilingHeight(mutable, j, (blockPosx) -> this.world.getBlockState(blockPosx).getCollisionShape(this.world, blockPosx));
-            if (e + g <= h) {
+            if (ex + g <= h) {
                passenger.setPose(entityPose2);
                break;
             }
@@ -752,3 +749,5 @@
       COMMAND_BLOCK;
    }
 }
+
+// Fukkit Marker
