--- a/net/minecraft/entity/passive/FoxEntity.java
+++ b/net/minecraft/entity/passive/FoxEntity.java
@@ -128,7 +128,7 @@
       this.goalSelector.add(1, new FoxEntity.StopWanderingGoal());
       this.goalSelector.add(2, new FoxEntity.EscapeWhenNotAggressiveGoal(2.2D));
       this.goalSelector.add(3, new FoxEntity.MateGoal(1.0D));
-      this.goalSelector.add(4, new FleeEntityGoal(this, PlayerEntity.class, 16.0F, 1.6D, 1.4D, (livingEntity) -> {
+      this.goalSelector.add(4, new FleeEntityGoal<>(this, PlayerEntity.class, 16.0F, 1.6D, 1.4D, (livingEntity) -> {
          return NOTICEABLE_PLAYER_FILTER.test(livingEntity) && !this.canTrust(livingEntity.getUuid()) && !this.isAggressive();
       }));
       this.goalSelector.add(4, new FleeEntityGoal(this, WolfEntity.class, 8.0F, 1.6D, 1.4D, (livingEntity) -> {
@@ -316,13 +316,13 @@
 
    private List<UUID> getTrustedUuids() {
       List<UUID> list = Lists.newArrayList();
-      list.add(((Optional)this.dataTracker.get(OWNER)).orElse((Object)null));
-      list.add(((Optional)this.dataTracker.get(OTHER_TRUSTED)).orElse((Object)null));
+      list.add((this.dataTracker.get(OWNER)).orElse(null));
+      list.add((this.dataTracker.get(OTHER_TRUSTED)).orElse(null));
       return list;
    }
 
    private void addTrustedUuid(@Nullable UUID uuid) {
-      if (((Optional)this.dataTracker.get(OWNER)).isPresent()) {
+      if ((this.dataTracker.get(OWNER)).isPresent()) {
          this.dataTracker.set(OTHER_TRUSTED, Optional.ofNullable(uuid));
       } else {
          this.dataTracker.set(OWNER, Optional.ofNullable(uuid));
@@ -629,7 +629,6 @@
       double d = chasedEntity.getZ() - fox.getZ();
       double e = chasedEntity.getX() - fox.getX();
       double f = d / e;
-      int i = true;
 
       for(int j = 0; j < 6; ++j) {
          double g = f == 0.0D ? 0.0D : d * (double)((float)j / 6.0F);
@@ -973,7 +972,7 @@
       private int counter;
 
       public SitDownAndLookAroundGoal() {
-         super(null);
+         super();
          this.setControls(EnumSet.of(Goal.Control.MOVE, Goal.Control.LOOK));
       }
 
@@ -1018,7 +1017,7 @@
       private int timer;
 
       public DelayedCalmDownGoal() {
-         super(null);
+         super();
          this.timer = FoxEntity.this.random.nextInt(140);
          this.setControls(EnumSet.of(Goal.Control.MOVE, Goal.Control.LOOK, Goal.Control.JUMP));
       }
@@ -1394,3 +1393,5 @@
       }
    }
 }
+
+// Fukkit Marker
